version: 2
jobs:
  build_linux:
    working_directory: ~/scatter-desktop
    docker:
    - image: circleci/golang:1.11-node
    steps:
    - checkout
    - run:
        name: "Installing OS requirements"
        command: sudo apt-get install -y libudev-dev librtlsdr-dev libusb-1.0-0-dev libpthread-stubs0-dev
    - run:
        name: "Creating release"
        command: |
          yarn
          yarn release linux
          shasum -a 256 release/linux-scatter-*.AppImage
          mkdir artifacts
          mv release/linux-scatter-*.AppImage artifacts
    - store_artifacts:
        path: artifacts

  build_macos:
    macos:
      xcode: 11.4.0
    steps:
    - checkout
    - run:
        name: "Setting up signing keychain"
        command: |
          security create-keychain -p $KEYCHAIN_PASSWORD build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p $KEYCHAIN_PASSWORD build.keychain
          security set-keychain-settings -lut 7200 build.keychain
          echo $KEYSTORE | base64 --decode - > keystore.p12
          security import keystore.p12 -k build.keychain -P $KEYCHAIN_PASSWORD -T /usr/bin/codesign
    - run:
        name: "Setting correct node version"
        command: |
          set +e
          touch $BASH_ENV
          curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
          echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
          echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
          echo nvm install 10.15.3 >> $BASH_ENV
          echo nvm alias default 10.15.3 >> $BASH_ENV
          node -v
    - run:
        name: "Creating release"
        command: |
          yarn
          yarn release mac
          shasum -a 256 release/mac-scatter-*.dmg
          mkdir artifacts
          mv release/mac-scatter-*.dmg artifacts
    - store_artifacts:
        path: artifacts

workflows:
  version: 2
  build:
    jobs:
    - build_macos:
        filters:
          branches:
            only: release
#      - build_linux:
#          context: org-global
#          filters:
#            branches:
#              only: release
